# 运行该程序前需要配置此文件，并去掉此文件的 -EXAMPLE 后缀或是用 Spring 的 profiles 指定配置文件。
server:

  port: 80

  # 如果使用了TLS，又同时要支持HTTP连接，则启用这个选项
#  additional-connector:
#    port: 80

spring:

  # 你需要先创建数据库，SpringBoot　能够使用 resources/schema.sql 自动建表
  datasource:
    url: jdbc:mariadb://localhost:3306/blog?allowMultiQueries=true
    username: root
    password: <your password>
    driver-class-name: org.mariadb.jdbc.Driver

  redis:
    host: localhost
    port: 6375
    password: <your password>

app:

  session:
    cookie:
      domain: localhost

  authorization:
    admin-principal: false

  # 测试时可以改成通配符 "*"
  cors:
    allowed-origins: https://api.example.com

  rate-limit:

    # 目前单页最大4个请求，保守起见 *5 倍，每秒 2 个也比较高了。
    generic:
      rate: 2
      size: 20

    # 对非幂等请求的限速，主要是限制评论速率
    effective:

      # 达到限制封禁IP，连续封禁时间依次递增
      block-times: [1h, 5h, 1d]

      # 封禁期访问则重置封禁时间
      refresh-on-reject: true

      # 60秒10个，半小时60个，一天300个
      limits:
        - permits: 6
          time: 60
        - permits: 60
          time: 1800
        - permits: 300
          time: 86400

  # 本系统支持 OAuth2 登录，取消下面的注释并填写 client-id 和 client-secret 即可启用
#  oauth2:
#
    # 前端页面的域名
#    www-host: localhost

    # 申请页面 https://console.developers.google.com/apis/credentials
#    google:
#      client-id: <your client-id>
#      client-secret: <your client-secret>

    # 申请页面 https://github.com/settings/applications/new
#    github:
#      client-id: <your client-id>
#      client-secret: <your client-secret>

  # OAuth2 可以通过代理访问第三方服务，服务器在在墙内时可能需要
#  http-client:
#   proxy: "localhost:1080"
