# 程序的配置文件，要运行程序必需填写 spring.database 和 spring.redis 这两个数据库连接

server:

#  port: 8080

  # 如果使用了TLS，又同时要支持 HTTP 连接，则启用这个选项
#  additional-connector:
#    port: 2400

  # 如果服务器前面有反代，则取消注释此行以获取真实IP
#  forward-headers-strategy: native

  # SameSite 默认就是 Lax，Secure 取决于是否使用 HTTPS
  servlet:
    session:
      cookie:
        domain: localhost

spring:

  # 你需要先创建数据库，SpringBoot 会自动建表。
  # 建表脚本是 src/main/resources 目录下的 schema.sql 和 data.sql
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/blog
    username: root
#    password: <your password>

  redis:
    host: localhost
    port: 6379
#    password: <your password>

  # 邮件服务配置，邮件通知功能需要
#  mail:
#    host: smtp.office365.com
#    port: 587
#    username: example@outlook.com
#    password: <password>

    # 如果 SMTP 要求 STARTTLS 必须加上这个属性
#    properties:
#      mail:
#        smtp:
#          starttls:
#            enable: true

app:

  # 给应用起个名，用于邮件发送者部分
  name: KacirasBlog

  # 网站（前端页面）的协议和域名
  origin: http://localhost

  # 是否启用友链（存活和互友）自动检查
  validate-friend: false

  # 是否禁用权限拦截，true 表示所有 API 都不需要管理员权限
  authorization:
    admin-principal: false

  cors:
    # 允许全部域名，生产环境请使用白名单模式
    # allowed-origin-patterns: "*"

    allowed-origins: http://localhost

#  notice:
#    mail:
#      from: Sender@example.com
#      admin: YourMail@example.com

  # 限流器相关配置，如果不设置将不限流
#  rate-limiter:

    # 目前单页最大4个请求，保守起见 *5 倍，每秒 2 个也比较高了。
#    generic:
#      rate: 2
#      size: 20

    # 对非幂等请求的限速，主要是限制评论速率
#    effective:

      # 达到限制封禁IP，连续封禁时间依次递增
#      block-times: [1h, 5h, 1d]

      # 封禁期访问则重置封禁时间
#      refresh-on-reject: true

      # 60秒10个，半小时60个，一天300个
#      limits:
#        - permits: 6
#          time: 60
#        - permits: 60
#          time: 1800
#        - permits: 300
#          time: 86400

    # 本系统支持 OAuth2 登录，填写 client-id 和 client-secret 即可启用
  #  oauth2:

  #     申请页面 https://console.developers.google.com/apis/credentials
  #    google:
  #      client-id: <your client-id>
  #      client-secret: <your client-secret>

  #     申请页面 https://github.com/settings/applications/new
  #    github:
  #      client-id: <your client-id>
  #      client-secret: <your client-secret>

  # 代理 HTTP Client 请求，机器在在墙内，以及想隐藏服务器地址时可使用
#  http-client:
#    proxy: "localhost:1080"
